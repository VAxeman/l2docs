var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Introductory","text":"<p>Welcome to Junior/Full L2 Docs Pages!</p> <p>This page was created with the hopes of helping both new and experienced technicians advance their knowledge and accelerate their salary increases.</p>"},{"location":"FTP.html","title":"FTP","text":"<p>FTP is a\u00a0protocol that relies on two communications channels between the client and server: a command channel for controlling the conversation and a data channel for transmitting file content.</p> <p>FTP transfer process:</p> <ol> <li> <p>A user typically needs to log on to the\u00a0FTP server, although some servers make some or all of their content available without a login, a model known as\u00a0_anonymous FTP</p> </li> <li> <p>The client initiates a conversation with the server when the user requests to download a file.</p> </li> <li> <p>Using FTP, a client can upload, download, delete, rename, move and copy files on a server.</p> </li> </ol> <p>Users can work with FTP via a simple command-line interface -- terminal -- or with a dedicated graphical user interface.  Most common client is  FileZilla that supports FTP, FTPS and SFTP, but web browsers can also serve as FTP clients. There are several different ways an FTP server and client software can conduct a file transfer using FTP:</p> <ul> <li>Anonymous FTP.\u00a0This is the most basic form of FTP. It provides support for data transfers without encrypting data or using a username and password. It's most commonly used for download of material that is allowed for unrestricted distribution. </li> <li>Password-protected FTP.\u00a0This is also a basic FTP service, but it requires the use of a username and password, though the service might not be encrypted or secure. It also works on port 21.</li> <li>FTP Secure (FTPS) is an extension of FTP that adds security through the use of Transport Layer Security (TLS) or Secure Sockets Layer (SSL) encryption. It provides an additional layer of protection by encrypting the control and data connections, preventing unauthorized access and data interception. FTPS can use either implicit SSL/TLS (FTPIS) or explicit SSL/TLS (FTPS). Implicit FTPS requires SSL/TLS encryption from the start, while explicit FTPS allows the client and server to negotiate encryption after the initial connection. It typically defaults to using port 990.</li> <li>Secure FTP (SFTP) - This is technically not an FTP protocol, but it functions similarly. Rather, SFTP is a subset of the Secure Shell (SSH) protocol that runs over port 22. SSH is commonly used by systems administrators to remotely and securely access systems and applications, and SFTP provides a mechanism within SSH for secure file transfer.</li> </ul> <p>By default, FTP does not encrypt traffic, and individuals can capture packets to read usernames, passwords and other data. By encrypting FTP with FTPS data is protected, limiting the ability of an attacker to eavesdrop on a connection and steal data.</p>"},{"location":"HTTP-HTTPS.html","title":"HTTP/HTTPS","text":""},{"location":"HTTP-HTTPS.html#http","title":"HTTP","text":"<p>Hypertext transfer protocol is a\u00a0protocol\u00a0used for transferring HTML documentations over the internet. It is a client-server protocol, which means requests are initiated by the recipient, usually the Web browser. Clients and servers communicate by exchanging individual messages. The messages sent by the client, usually a Web browser, are called\u00a0requests\u00a0and the messages sent by the server as an answer are called\u00a0responses.</p> <p>To display a Web page, the browser sends an original request to fetch the HTML document that represents the webpage. A server will accept the request and access port 80 which is reserved for HTTP requests and serve the file to the user-agent. The Web browser then combines these resources to present the complete document, the Web page. Scripts executed by the browser can fetch more resources in later phases and the browser updates the Web page accordingly.</p> <p>HTTP is a stateless protocol:</p> <p>HTTP that is the actual transport protocol between the server and the client -- is \"stateless\" because it remembers nothing between invocations.\u00a0EVERY\u00a0resource that is accessed via HTTP is a single request with no threaded connection between them. If you load a web page with an HTML file that within it contains three\u00a0<code>&lt;img&gt;</code>\u00a0tags hitting the same server, there will be four TCP connections negotiated and opened, four data transfers, four connections closed. There is simply no state kept at the server\u00a0at the\u00a0protocol\u00a0level\u00a0that will have the server know anything about you as you come in.</p> <p>Almost anything you want to do other than viewing static web pages will involve sessions and states. When HTTP is used for its original purpose (sharing static information like scientific papers) the stateless protocol makes a lot of sense. When you start using it for things like web applications, online stores, etc. then statelessness starts to be a bother because these are inherently stateful activities. As a result people very rapidly came up with ways to slather state on top of the stateless protocol. These mechanisms have included things like cookies, like encoding state in the URLs and having the server dynamically fire up data based on those, like hidden state requests</p>"},{"location":"HTTP-HTTPS.html#https-hypertext-transfer-protocol-secure","title":"HTTPS - hypertext transfer protocol secure.","text":"<p>The issue with HTTP is that it does not encrypt the packages when a client is communicating with the server. This means that anyone who has an access to that network can read the information that is being transmitted, such as passwords, credit card numbers etc. In order to protect users from man-in-the-middle attacks, we use HTTPS. </p> <p>HTTPS uses an TLS/SSL encryption in order to randomize the text being transferred and hide the contents of the communication. This type of security system uses two different keys to encrypt communications between two parties:</p> <ol> <li> <p>The private key - this key is controlled by the owner of a website and it\u2019s kept, as the reader may have speculated, private. This key lives on a web server and is used to decrypt information encrypted by the public key.</p> </li> <li> <p>The public key - this key is available to everyone who wants to interact with the server in a way that\u2019s secure. Information that\u2019s encrypted by the public key can only be decrypted by the private key.</p> </li> </ol> <p>HTTPS uses port 443</p>"},{"location":"HTTP-HTTPS.html#http-responsestatus-codes","title":"HTTP RESPONSE/STATUS CODES:","text":"<p>All HTTP response status codes are separated into five classes or categories. The first digit of the status code defines the class of response, while the last two digits do not have any classifying or categorization role. There are five classes defined by the standard:</p> <ul> <li>1xx informational response\u00a0\u2013 the request was received, continuing process</li> <li>2xx successful\u00a0\u2013 the request was successfully received, understood, and accepted</li> <li>3xx redirection\u00a0\u2013 further action needs to be taken in order to complete the request</li> <li>4xx client error\u00a0\u2013 the request contains bad syntax or cannot be fulfilled</li> <li>5xx server error\u00a0\u2013 the server failed to fulfill an apparently valid request</li> </ul> <p>Common response codes:</p> <ul> <li><code>200</code> - Ok</li> <li><code>300</code> - Multiple choices</li> <li><code>301</code> - Moved Permanently</li> <li><code>302</code> - Found</li> <li><code>400</code> - Bad request</li> <li><code>401</code> - Unauthorized</li> <li><code>403</code> - Forbidden</li> <li><code>404</code> - Not Found</li> <li><code>408</code> - Request Timeout</li> <li><code>418</code> - I'm a teapot</li> <li><code>429</code> - Too many requests</li> <li><code>444</code> - No Response</li> <li><code>500</code> - Internal Server Error</li> <li><code>502</code> - Bad Gateway</li> <li><code>503</code> - Service Unavailable</li> <li><code>504</code> - Gateway Timeout</li> </ul>"},{"location":"TCP-vs-UDP.html","title":"TCP","text":"<p>Transmission Control Protocol is a connection-oriented protocol where a stable connection is established between a client and a server before data can be sent. The data transmitted by TCP protocol is in the form of continuous datastreams.</p> <p>TCP protocol operation is divided into three phases: - Connection establishment - Data transfer - Connection termination</p>"},{"location":"TCP-vs-UDP.html#connection-establishment-three-way-handshake","title":"Connection establishment (Three-way handshake):","text":"<p>Before a client attempts to connect with a server, the server must first bind to and listen at a port to open it up for connections: this is called a passive open. Once the passive open is established, a client may establish a connection by initiating an active open using the three-way (or 3-step) handshake.</p> <p>TCP segment will have a header attached to it which will list out a source and destination port, a segment sequence number and a flag which is used to provide additional information regarding data transfer. In case of a 3-way handshake, we deal with following flgs:</p> <ol> <li>SYN: The active open is performed by the client sending a SYN (synchronize) to the server. The client sets the segment's sequence number to a random value A.</li> <li>SYN-ACK: In response, the server replies with a SYN-ACK (synchronize-acknowledge). The acknowledgment number is set to one more than the received sequence number i.e. A+1, and the sequence number that the server chooses for the packet is another random number, B.</li> <li>ACK: Finally, the client sends an ACK (acknowledge) back to the server. The sequence number is set to the received acknowledgment value i.e. A+1, and the acknowledgment number is set to one more than the received sequence number i.e. B+1.</li> </ol> <p>Steps 1 and 2 establish and acknowledge the sequence number for one direction (client to server). Steps 2 and 3 establish and acknowledge the sequence number for the other direction (server to client). Following the completion of these steps, both the client and server have received acknowledgments and a full-duplex communication is established.</p>"},{"location":"TCP-vs-UDP.html#data-transfer","title":"Data transfer","text":"<p>The Transmission Control Protocol differs in several key features compared to the User Datagram Protocol:</p> <ul> <li>Ordered data transfer: the destination host rearranges segments according to a sequence number</li> <li>Retransmission of lost packets: any cumulative stream not acknowledged is retransmitted</li> <li>Error-free data transfer: corrupted packets are treated as lost and are retransmitted</li> <li>Flow control: limits the rate a sender transfers data to guarantee reliable delivery. The receiver continually hints the sender on how much data can be received. When the receiving host's buffer fills, the next acknowledgment suspends the transfer and allows the data in the buffer to be processed.</li> <li>Congestion control: lost packets (presumed due to congestion) trigger a reduction in data delivery rate</li> </ul>"},{"location":"TCP-vs-UDP.html#connection-termination","title":"Connection termination","text":"<p>The connection termination phase uses a four-way handshake, with each side of the connection terminating independently. When an endpoint wishes to stop its half of the connection, it transmits a FIN packet, which the other end acknowledges with an ACK. Therefore, a typical tear-down requires a pair of FIN and ACK segments from each TCP endpoint. After the side that sent the first FIN has responded with the final ACK, it waits for a timeout before finally closing the connection, during which time the local port is unavailable for new connections; this state lets the TCP client resend the final acknowledgment to the server in case the ACK is lost in transit. </p> <p>The time duration is implementation-dependent, but some common values are 30 seconds, 1 minute, and 2 minutes. After the timeout, the client enters the CLOSED state and the local port becomes available for new connections.</p> <p>It is also possible to terminate the connection by a 3-way handshake, when host A sends a FIN and host B replies with a FIN &amp; ACK (combining two steps into one) and host A replies with an ACK.</p> <p>Source: https://en.wikipedia.org/wiki/Transmission_Control_Protocol</p>"},{"location":"TCP-vs-UDP.html#udp","title":"UDP","text":"<p>UDP is the \u201cfire and forget\u201d type of a protocol. It uses a connectionless communication model with a minimum of protocol mechanisms. </p> <p>UDP datagram header doesn\u2019t possess any of the extra fields TCP segment headers carry to make sure the data is received intact. The trade-off is that a transmission of data is far faster because more data can be packed into a datagram. As such, UDP is utilized in cases where speed is preferable to stability.</p> <p>UDP works best when you have a lot of data that doesn\u2019t need to be perfect or when the systems are so close to each other that the chances of a problem occurring are too small to bother worrying about. A few dropped frames on a Voice over IP call, for example, won\u2019t make much difference in the communication between two people. </p> <p>Two of the most important networking protocols, Domain Name System (DNS) and Dynamic Host Configuration Protocol (DHCP) also use UDP. </p> <p>DHCP uses UDP because DHCP server can\u2019t assume another computer is ready on either side of the session, so each step of a DHCP session just sends the information for that step without any confirmation. </p> <p>Sending a connectionless datagram also makes sense because the client won\u2019t have an IP address to begin the three-way hand-shake. DHCP uses two port numbers: DHCP clients use port 68 for sending data to and receiving data from the DHCP server, and DHCP servers use port 67 for sending and receiving data to and from DHCP clients.</p>"},{"location":"deliverability.html","title":"SPF/DKIM/DMARC EXPLAINED:","text":"<p>SPF, DKIM, and DMARC: The Three Musketeers of Email Authentication</p> <p>In the world of email security, SPF, DKIM, and DMARC are three essential protocols that help prevent spam and phishing attacks by verifying the authenticity of email messages.</p> <p>SPF verifies the authenticity of an email sender's domain</p> <p>DKIM verifies the authenticity of an email message using digital signatures</p> <p>DMARC provides additional features for email authentication and reporting, and specifies how receivers should handle failed authentication attempts</p> <p>Domain-based Message Authentication, Reporting, and Conformance (DMARC) works with Sender Policy Framework (SPF) and DomainKeys Identified Mail (DKIM) to authenticate mail senders to your recipient mail servers (the personnel you are sending emails to).</p> <p>These are three protection mechanisms that help maintain mail purity as it travels to your clients, but is not an automatic/universal measure in many cases across many service providers.</p> <p>DMARC ensures the destination email systems trust messages sent from your domain. Using DMARC with SPF and DKIM gives organizations like yours protection against spoofing and phishing emails. DMARC helps mail systems that are receiving your messages decide what to do with those nasty \"messages\" pretending to be from your domain that fail SPF or DKIM checks.</p>"},{"location":"deliverability.html#how-do-spf-and-dmarc-work-together","title":"How do SPF and DMARC work together?","text":"<p>An email message can contain multiple originator or sender addresses. These addresses are used for different purposes. For example, look at these addresses:</p> <ul> <li> <p>\"Mail From\" address: This identifies the sender and says where to send return notices if any problems occur with the delivery of the message (such as non-delivery notices). The Mail From address appears in the envelope portion of an email message and isn't displayed by your email application, and is sometimes called the 5321.MailFrom address or the reverse-path address. You won't see it unless you examine the headers, but believe me, it's there.</p> </li> <li> <p>\"From\" address: This is the address displayed as the From address by your mail application. The From address identifies the author of the email. That is, the mailbox of the person or system responsible for writing the message. The From address is sometimes called the 5322.From address.</p> </li> </ul> <p>SPF uses a DNS TXT record to list the specific authorized sending IP addresses and services for a domain. Normally, SPF checks only get performed against the 5321.MailFrom address. The 5322.From address (remember, that's the second one) isn't authenticated when you use SPF by itself, which allows for a scenario where a user gets a message that passed SPF checks but has a spoofed 5322.From sender address. </p> <p>This is no fun for anybody, because it's a huge security hole in the phishing and spam realm.</p> <p>The 5321 and 5322 numbers are highly boring geek-speak referring to the Request For Comments (RFC) on these provided by the Internet Engineering Task Force (IETF). If you'd like to tiptoe through the tulips of Internet pain, I leave them here for your reference:</p> <p>https://datatracker.ietf.org/doc/html/rfc5321 https://datatracker.ietf.org/doc/html/rfc5322</p> <p>Let me give you an example, and in this one the sender addresses are as follows: Mail from address (5321.MailFrom): badguy@phishing.nastyplace.com From address (5322.From): security@yourhappydomain.com</p> <p>If SPF is configured, then the receiving server does a check against the Mail from address badguy@phishing.nastyplace.com. If the message came from a valid source for the domain phishing.nastyplace.com, then the SPF check passes. By \"valid source\", that means that the originating server exists, not that it's actually yours. See the problem already in progress? Since the email client only displays the From address, the user sees this message came from security@yourhappydomain.com. With SPF alone, the validity of yourhappydomain.com was never authenticated.</p> <p>When we use DMARC, the receiving server will additionally perform a check against the From address. In the example above, if there's a DMARC TXT record in place for yourhappydomain.com, then the check against the From address fails because the \"Mail from\" is a mismatch against the legitimate domain.</p> <p>That deceptive email is bounced or quarantined, and the crisis you never knew you had is diverted.</p> <p>Once we've set up SPF and DMARC, we need to set up DKIM. </p> <p>DKIM lets you add a digital signature to email messages in the message header that certify the message in fact originated from your mail server and nowhere else. It's a security measure for your domain specifically, similar to a house or car key, except more cryptographic and messier looking. If you don't set up DKIM and instead allow the mail server to use their default DKIM configuration for your domain, DMARC may fail. This failure can happen because the default DKIM configuration will use the standard nexcess.net domain as the 5321.MailFrom address, not your specific domain. This creates a mismatch between the 5321.MailFrom and the 5322.From addresses in all the email sent from your domain.</p> <p>There are other hairs we could split here that include third-party services, but this is meant to provide an overview of these three records and why they must be intentionally and correctly implemented.</p> <p>If you need to verify or adjust these settings for your own domain or another, I recommend using the DMARCly tool (https://dmarcly.com/tools/), which makes it easy to generate and check your settings. By doing so, you'll be able to protect your professional image and maintain a positive reputation.</p> <p>After all, no one wants to end up in the spam folder - except, perhaps, spammers! We'll leave it to them to fend for themselves.\"</p>"},{"location":"deliverability.html#example-of-a-proper-dmarc-record","title":"Example of a proper DMARC record:","text":"<p>PROPER DMARC The current DMARC for domain.com is: <pre><code>\"v=DMARC1; p=quarantine; rua=mailto:postmaster@domain.com; sp=none; aspf=s; adkim=s; fo=1;\"\n</code></pre></p> <p><code>p=quarantine</code>: This specifies the policy for emails that fail DMARC authentication. In this case, the policy is to quarantine (i.e., mark as spam) emails that fail authentication.</p> <p><code>rua=mailto:postmaster@domain.com</code>: This specifies the email address to which aggregate reports should be sent. In this case, the reports will be sent to postmaster@domain.com.</p> <p><code>sp=none</code>: This specifies the policy for subdomains. In this case, the policy is to ignore any subdomains that are not explicitly listed in the DMARC record.</p> <p><code>aspf=s; adkim=s;</code> These specify the alignment methods for SPF and DKIM.</p> <p><code>fo=1</code>: This specifies the forensic OAuth reporting mode. In this case, it is set to 1, which means that forensic reports will be sent to the email address specified in the rua parameter.</p>"},{"location":"deliverability.html#tldr","title":"TL;DR","text":"<p>Emails that fail DMARC authentication should be quarantined, reports should be sent to <code>postmaster@domain.com</code>. The policy for subdomains is to ignore any subdomains that are not explicitly listed, and checks are aligned at subdomain level.</p> <p>Setting alignment checks at the root level can be more restrictive, but it may also result in the rejection of some legitimate emails that do not meet the specified alignment criteria, potentially causing issues with email delivery.</p> <p>IMPORTANT NOTICE!!!!!!!!!</p> <p>We don't want to deal with directly configuring DMARC and the potential repercussions of our actions. It is typically the responsibility of the client and their developers to review and set up the DMARC policy.</p> <p>Our job is to set up the most generic/default DMARC configuration:</p> <pre><code>Value: \"v=DMARC1; p=none;\"\n</code></pre>"},{"location":"difference-a-cname-alias.html","title":"Differences Among A, CNAME, ALIAS, and URL records","text":"<p><code>A</code>, <code>CNAME</code>, <code>ALIAS</code>, and <code>URL</code> records are all possible solutions to point a host name (\u201cname\u201d) to your site. However, they have small differences that affect how the client reaches your site.</p> <p><code>A</code> and <code>CNAME</code> records are standard DNS records. <code>ALIAS</code> and <code>URL</code> records are custom DNS records. Both of them are translated internally into <code>A</code> records to ensure compatibility with the DNS protocol.</p>"},{"location":"difference-a-cname-alias.html#understanding-the-differences","title":"Understanding the differences","text":"<p>These are the main differences:</p> <ul> <li>The <code>A</code> record maps a name to one or more IP addresses when the IP are known and stable.</li> <li>The <code>CNAME</code> record maps a name to another name. It should only be used when there are no other records on that name.</li> <li>The <code>ALIAS</code> record maps a name to another name, but can coexist with other records on that name.</li> <li>The <code>URL</code> record redirects the name to the target name using the HTTP 301 status code.</li> </ul> <p>Important rules:</p> <ul> <li>The <code>A</code>, <code>CNAME</code>, and <code>ALIAS</code> records cause a name to resolve to an IP. Conversely, the <code>URL</code> record redirects the name to a destination. The <code>URL</code> record is a simple and effective way to apply a redirect for one name to another name, for example redirecting www.example.com to example.com.</li> <li>The <code>A</code> name must resolve to an <code>IP</code>. The <code>CNAME</code> and <code>ALIAS</code> records must point to a name.</li> </ul>"},{"location":"difference-a-cname-alias.html#which-one-to-use","title":"Which one to use","text":"<p>Understanding the difference between <code>A</code> name and <code>CNAME</code> records will help you decide.</p> <p>General rules:</p> <ul> <li>Use an <code>A</code> record if you manage which IP addresses are assigned to a particular machine, or if the <code>IP</code> are fixed (this is the most common case).</li> <li>Use a <code>CNAME</code> record if you want to alias one name to another name, and you don\u2019t need other records (such as <code>MX</code> records for emails) for the same name.</li> <li>Use an <code>ALIAS</code> record if you\u2019re trying to alias the root domain (apex zone), or if you need other records for the same name.</li> <li>Use the <code>URL</code> record if you want the name to redirect (change address) instead of resolving to a destination.</li> </ul> <p>You should never use a CNAME record for your root domain name (e.g. example.com).</p>"},{"location":"dns.html","title":"DNS (Domain Name System)","text":"<p>Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.</p> <p>The process of DNS resolution involves converting a hostname (such as www.example.com) into a computer-friendly IP address (such as 192.168.1.1). An IP address is given to each device on the Internet, and that address is necessary to find the appropriate Internet device - like a street address is used to find a particular home. When a user wants to load a webpage, a translation must occur between what a user types into their web browser (example.com) and the machine-friendly address necessary to locate the example.com webpage.</p>"},{"location":"dns.html#dns-lookup","title":"DNS lookup","text":"<ol> <li>A DNS lookup typically refers to the process of converting easy to remember names called domain names (like www.google.com) into numbers called IP addresses (like 192.168.2.1). A user types the URL example.com into their web browser.     1.1. Browser cache, device cache, hosts file, router and ISP cache</li> <li>The user\u2019s computer sends a request to the recursive resolver.</li> <li>The recursive resolver then sends a request to the root nameserver which provides the address . of the TLD nameserver responsible for .com domain names.</li> <li>The root nameserver returns the result of the TLD nameserver to the recursive resolver.</li> <li>The recursive resolver sends a request to the .com TLD nameserver which provides the address of the authoritative nameserver responsible for the example.com domain.</li> <li>The TLD nameserver returns the result of the authoritative nameserver to the recursive resolver.</li> <li>The recursive resolver sends a request to the authoritative nameserver responsible for example.com which provides the DNS records requested.</li> <li>The authoritative nameserver returns results to the recursive resolver.</li> <li>The recursive resolver returns DNS records containing the IP address to the browser.</li> <li>The browser makes a request directly to the IP address of the server hosting the website.</li> </ol>"},{"location":"dns.html#host-file","title":"Host file","text":"<p>A hosts file which is used by operating systems to map a connection between an IP address and domain names before going to domain name servers. This file is a simple text file with the mapping of IPs and domain names. Can override DNS and redirect URLs or IP addresses to different locations. </p>"},{"location":"dns.html#dns-servers","title":"DNS servers","text":""},{"location":"dns.html#dns-recursor-recursive-resolver","title":"DNS recursor - recursive resolver","text":"<p>The recursive resolver server is designed to receive browser queries and is in charge of adding new ones.</p> <p>The recursor can be thought of as a librarian who is asked to go find a particular book somewhere in a library. The DNS recursor is a server designed to receive queries from client machines through applications such as web browsers. Typically the recursor is then responsible for making additional requests in order to satisfy the client\u2019s DNS query. A recursive resolver (also known as a DNS recursor) is the first stop in a DNS query. The recursive resolver acts as a middleman between a client and a DNS nameserver. After receiving a DNS query from a web client, a recursive resolver will either respond with cached data, or send a request to a root nameserver, followed by another request to a TLD nameserver, and then one last request to an authoritative nameserver. After receiving a response from the authoritative nameserver containing the requested IP address, the recursive resolver then sends a response to the client. During this process, the recursive resolver will cache information received from authoritative nameservers. When a client requests the IP address of a domain name that was recently requested by another client, the resolver can circumvent the process of communicating with the nameservers, and just deliver the client the requested record from its cache. Most Internet users use a recursive resolver provided by their ISP.</p>"},{"location":"dns.html#root-nameserver","title":"Root nameserver","text":"<p>Used as reference and points to other specific locations.</p> <p>The root server is the first step in translating (resolving) human readable host names into IP addresses. It can be thought of like an index in a library that points to different racks of books - typically it serves as a reference to other more specific locations. The 13 DNS root nameservers are known to every recursive resolver, and they are the first stop in a recursive resolver\u2019s quest for DNS records. A root server accepts a recursive resolver\u2019s query which includes a domain name, and the root nameserver responds by directing the recursive resolver to a TLD nameserver, based on the extension of that domain (.com, .net, .org, etc.). The root nameservers are overseen by a nonprofit called the Internet Corporation for Assigned Names and Numbers (ICANN). Note that while there are 13 root nameserver hostnames, that does not mean that there are only 13 machines in the root nameserver system. There are 13 types of root nameservers, but there are multiple copies of each one all over the world, which use Anycast routing to provide speedy responses. If you added up all the instances of root nameservers, you\u2019d have over 600 different servers.</p>"},{"location":"dns.html#tld-nameserver","title":"TLD nameserver","text":"<p>Contains info on TLD (.com, .net\u2026) </p> <p>The top level domain server (TLD) can be thought of as a specific rack of books in a library. This nameserver is the next step in the search for a specific IP address, and it hosts the last portion of a hostname (In example.com, the TLD server is \u201ccom\u201d). A TLD nameserver maintains information for all the domain names that share a common domain extension, such as .com, .net, or whatever comes after the last dot in a URL. For example, a .com TLD nameserver contains information for every website that ends in \u2018.com\u2019. If a user was searching for google.com, after receiving a response from a root nameserver, the recursive resolver would then send a query to a .com TLD nameserver, which would respond by pointing to the authoritative nameserver (see below) for that domain.</p> <ul> <li>Generic top-level domains: These are domains that are not country specific, some of the best-known generic TLDs include .com, .org, .net, .edu, and .gov.</li> <li>Country code top-level domains: These include any domains that are specific to a country or state. Examples include .uk, .us, .ru, and .jp.</li> </ul>"},{"location":"dns.html#authoritative-nameserver","title":"Authoritative nameserver","text":"<p>Should have info on the requested site (it contains the DNS zone).</p> <p>This final nameserver can be thought of as a dictionary on a rack of books, in which a specific name can be translated into its definition. The authoritative nameserver is the last stop in the nameserver query. If the authoritative name server has access to the requested record, it will return the IP address for the requested hostname back to the DNS Recursor (the librarian) that made the initial request. When a recursive resolver receives a response from a TLD nameserver, that response will direct the resolver to an authoritative nameserver. The authoritative nameserver is usually the resolver\u2019s last step in the journey for an IP address. The authoritative nameserver contains information specific to the domain name it serves (e.g. google.com) and it can provide a recursive resolver with the IP address of that server found in the DNS A record, or if the domain has a CNAME record (alias) it will provide the recursive resolver with an alias domain, at which point the recursive resolver will have to perform a whole new DNS lookup to procure a record from an authoritative nameserver (often an A record containing an IP address). </p> <p>https://www.cloudflare.com/learning/dns/dns-server-types/ </p>"},{"location":"dns.html#dns-records","title":"DNS records","text":""},{"location":"dns.html#a-record","title":"A record","text":"<p>The record that holds the IP address of a domain. The \"A\" stands for \"address\" and this is the most fundamental type of DNS record: it indicates the IP address of a given domain. The most common usage of A records is IP address lookups: matching a domain name (like \"cloudflare.com\") to an IPv4 address. This enables a user's device to connect with and load a website, without the user memorizing and typing in the actual IP address. </p> <ul> <li>DNS AAAA records match a domain name to an IPv6 address. DNS AAAA records are exactly like DNS A records, except that they store a domain's IPv6 address instead of its IPv4 address.</li> </ul>"},{"location":"dns.html#cname-record","title":"CNAME record","text":"<p>Forwards one domain or subdomain to another domain, does NOT provide an IP address.  The \u2018canonical name\u2019 (CNAME) record is used in lieu (in substitution) of an A record, when a domain or subdomain is an alias of another domain. All CNAME records must point to a domain, never to an IP address. </p> <ul> <li>CNAME restrictions - MX and NS records cannot point to a CNAME record; they have to point to an A record (for IPv4) or an AAAA record (for IPv6). </li> </ul>"},{"location":"dns.html#mx-record","title":"MX record","text":"<p>An MX record is a mail exchange record that directs email to a mail server. The MX record indicates how email messages should be routed in accordance with the Simple Mail Transfer Protocol (SMTP, the standard protocol for all email). Like CNAME records, an MX record must always point to another domain.</p>"},{"location":"dns.html#txt-record","title":"TXT record","text":"<p>Lets an admin store text notes in the record. These records are often used for email security. Today, two of the most important uses for DNS TXT records are email spam prevention and domain ownership verification, although TXT records were not designed for these uses originally. One domain can have many TXT records.</p> <p>Together, DMARC, DKIM, and SPF function like a background check on email senders, to make sure they really are who they say they are.</p>"},{"location":"dns.html#spf-record","title":"SPF record","text":"<p>A sender policy framework (SPF) record is a type of DNS TXT record that lists all the servers authorized to send emails from a particular domain. https://www.proofpoint.com/us/threat-reference/spf</p>"},{"location":"dns.html#dkim-record","title":"DKIM record","text":"<p>DomainKeys Identified Mail (DKIM) is a method of email authentication that helps prevent spammers and other malicious parties from impersonating a legitimate domain. https://www.proofpoint.com/us/threat-reference/dkim</p>"},{"location":"dns.html#dmarc","title":"DMARC","text":"<p>Domain-based Message Authentication Reporting and Conformance (DMARC) is a method of authenticating email messages. A DMARC policy tells a receiving email server what to do after checking a domain's Sender Policy Framework (SPF) and DomainKeys Identified Mail (DKIM) records.</p>"},{"location":"dns.html#ns-record","title":"NS record","text":"<p>NS stands for \u2018nameserver,\u2019 and the nameserver record indicates which DNS server is authoritative for that domain (i.e. which server contains the actual DNS records). Basically, NS records tell the Internet where to go to find out a domain's IP address. A domain often has multiple NS records which can indicate primary and secondary nameservers for that domain. Without properly configured NS records, users will be unable to load a website or application.</p>"},{"location":"dns.html#soa-record","title":"SOA record","text":"<p>\u2018Start of authority\u2019 (SOA) record stores important information about a domain or zone such as name of a primary DNS server (hostname of the primary DNS server for the zone, and it should contain a matching NS record), the email address of the administrator, when the domain was last updated, serial number (used by secondary DNS servers to check if the zone has changed), and how long the server should wait between refreshes.</p> <p>Every DNS database file begins with a Start of Authority (SOA) resource record. Whenever you alter any data in a DNS database file, you must increment the SOA serial number by one integer.</p> <p>For example, if the current SOA Serial Number in a data file is 101, and you make a change to the file's data, you must change 101 to 102. If you don't change the SOA serial number, the domain's slave servers do not update their copy of the database files with the new information. The master and slave servers would then be out of sync.</p>"},{"location":"dns.html#srv-record","title":"SRV record","text":"<p>The DNS \"service\" (SRV) record specifies a host and port for specific services such as voice over IP (VoIP), instant messaging, and so on. Most other DNS records only specify a server or an IP address, but SRV records include a port at that IP address as well. Some Internet protocols require the use of SRV records in order to function.</p>"},{"location":"dns.html#ptr-record","title":"PTR record","text":"<p>Provides a domain name in reverse-lookups.  A DNS pointer record (PTR for short) provides the domain name associated with an IP address. A DNS PTR record is exactly the opposite of the 'A' record, which provides the IP address associated with a domain name. DNS PTR records are used in reverse DNS lookups. PTR records store IP addresses with their segments reversed, and they append \".in-addr.arpa\" to that. </p> <p>For example if a domain has an IP address of 192.0.2.1, the PTR record will store the domain's information under 1.2.0.192.in-addr.arpa.</p>"},{"location":"dns.html#glue-record","title":"GLUE record","text":"<p>Glue records are DNS records created at the domain\u2019s registrar. The record provides a complete answer when the TLD nameserver returns a reference for an authoritative nameserver for a domain.  Creating a glue record, an A record served by the TLD nameserver, avoids circular references and allows for both DNS name resolution and listing the nameservers inside the domain itself. Glue records can only be created at the domain registrar as the registrar controls the DNS settings for a given domain\u2019s delegation. Every nameserver on the internet has its own glue record created by the domain\u2019s owner. In normal DNS resolution, when a resolver attempts to resolve a domain name, it first queries the root, which provides the top-level domain. Next, it queries the top-level domain servers, which provide the domain\u2019s authoritative nameservers. Finally, it queries the authoritative nameservers for the domain to resolve the domain name. If the nameservers for a domain exist inside the domain itself, a glue record is needed to resolve the domain name.</p> <p>https://www.cloudflare.com/learning/dns/dns-records/</p>"},{"location":"domains.html","title":"Domains","text":""},{"location":"domains.html#domain-name","title":"Domain name","text":"<p>Simply put, a domain name (or just \u2018domain\u2019) is the name of a website. It\u2019s what comes after \u201c@\u201d in an email address, or after \u201cwww.\u201d in a web address. If someone asks how to find you online, what you tell them is usually your domain name. Domain names are typically broken up into two or three parts, each separated by a dot. To the left of the <code>TLD</code> is the second-level domain (<code>2LD</code>) and if there is anything to the left of the <code>2LD</code>, it is called the third-level domain (<code>3LD</code>).  For Google\u2019s US domain name, \u2018google.com\u2019:</p> <ul> <li>\u2019.com\u2019 is the <code>TLD</code> (most general)</li> <li>\u2019google\u2019 is the <code>2LD</code> (most specific)</li> </ul> <p>Difference between a domain name and a <code>URL</code>? A uniform resource locator (<code>URL</code>), sometimes called a web address, contains the domain name of a site as well as other information, including the protocol and the path. For example, in the <code>URL</code> \u2018https://example.com/learning/\u2019, example.com\u2019 is the domain name, while \u2018https\u2019 is the protocol and \u2018/learning/\u2019 is the path to a specific page on the website.</p>"},{"location":"domains.html#fqdn-fully-qualified-domain-name","title":"FQDN - Fully qualified domain name","text":"<p>Check - https://en.wikipedia.org/wiki/Fully_qualified_domain_name</p> <p>A fully qualified domain name (<code>FQDN</code>) is a part of the uniform resource locator (<code>URL</code>). As the name suggests, it is the full name of an entity in the internet framework, including a host and a computer.</p> <p><code>FQDNs</code> are usually used in any interaction on the internet as they are easier to remember than IP addresses. Below are several scenarios of when to use an <code>FQDN</code>:</p> <ul> <li> <p>Getting an SSL certificate. A secure sockets layer (<code>SSL</code>) protects a connection between a web server and a browser. An <code>SSL</code> certificate is issued to an <code>FQDN</code>, so you may not be able to use <code>SSL</code> services properly without it.</p> </li> <li> <p>Connecting to a remote host. You can make a remote host or a virtual machine by specifying any <code>FQDN</code>, enabling the DNS to look at its DNS table and locate the server. If you use only the hostname to connect to a server, your application may not be able to resolve the hostname.</p> </li> <li> <p>Accessing a specific domain service or protocol. Activities transferring information across a network generally involve the DNS, including pointing to an <code>FQDN</code>. An example is when you connect to a File Transfer Protocol (FTP) or an email server.</p> </li> <li> <p>Migrating to a new server. If you want to migrate your service to a server with a different IP address, using an <code>FQDN</code> instead of an IP address lets you quickly change the DNS record and reduce outages in the IP address changes.</p> </li> </ul>"},{"location":"emails.html","title":"Email","text":"<p>Keywords</p> <p>MUA (Mail User Agent) - Webmails, Clients (Outlook, Thunderbird) MDA (Mail Delivery Agent) MTA (Mail Transfer Agent) SMTP (Simple Mail Transfer Protocol) IMAP (Internet Message Access Protocol) POP3 (Post Office Protocol 3) MX records (Mail Exchange Records) SPF (Sender Policy Framework) DKIM (Domain Keys Identified Mail) DMARC (Domain-based Message Authentication and Conformance)</p>"},{"location":"emails.html#process","title":"Process","text":""},{"location":"emails.html#mail-user-agent","title":"Mail User Agent","text":"<p>MUA (Mail User Agent) or an email client is a software or a web application that allows users to compose, send, and manage their emails. Examples include Microsoft Outlook, Mozilla Thunderbird, and Apple Mail (software application) and RoundCube, SquirrelMail and Horde (web applications). </p> <p>Our customers can also send emails through their websites using default PHP mailer or SMTP plugins - form submissions are one example. If form submission is set up, their customers will fill out the form and the website will send out an email automatically as a \u201cquasi\u201d MUA.</p>"},{"location":"emails.html#mail-transfer-agentsmtp","title":"Mail Transfer Agent/SMTP","text":"<p>Once an email is sent, an email client will communicate with an MTA - Mail Transfer Agent - the SMTP server. </p> <p>SMTP server utilizes software like exim, qmail or postifx to send a message to the recipient's mail server. The SMTP server will take an email message from a client and prepare it for a delivery by adding necessary headers like sender and recipient addresses and append the details required for a transmission. </p> <p>Afterwards, the SMTP server performs a DNS lookup to find the recipient server. Once the recipient\u2019s mail server is identified, your email server establishes a connection with it using the SMTP (Simple Mail Transfer Protocol) which facilitates the transmission of email messages between servers over ports  25/465/587. The email message is transferred from the sender's server to the recipient's server through this connection.</p> <p>The recipient's SMTP server receives incoming email messages from sender's SMTP server and verifies the validity of the email through various checkups such as:</p> <ul> <li>DNS record verification - SPF, DKIM, DMARC, PTR</li> <li>Server side SPAM rules</li> </ul>"},{"location":"emails.html#mail-delivery-agent","title":"Mail Delivery Agent","text":"<p>When the validity of the email is verified, recipient SMTP server will invoke MDA like Dovecot to store the incoming email in the proper user's mailbox.  Once the email is delivered, MUA utilizes IMAP/POP3 protocols to retrieve emails from a mail server for the user.</p>"},{"location":"emails.html#pop3","title":"POP3","text":"<p>Post Office Protocol 3 is an email protocol that clients use to retrieve email from a mail server. POP3 clients connect, retrieve all messages, store them on the client computer, and finally delete them from the server (although there is an option for email clients to leave the message on the server or simply download a local copy). POP3 treats the mailbox as a single store, and has no concept of folders. It also provides a completely static view of the current state of the mailbox and does not provide a mechanism to show any external changes in state during the session.</p> <p>This design of POP and its procedures was driven by the need of users having only temporary Internet connections, such as dial-up access, allowing these users to retrieve email when connected, and subsequently to view and manipulate the retrieved messages when offline. A POP3 server listens on port number 110 for service requests or port number 995 for secure connection (POP3S).</p>"},{"location":"emails.html#imap","title":"IMAP","text":"<p>The Internet Message Access Protocol allows a client to access and manipulate electronic mail messages on a server, as well as manipulation of mailboxes\u00a0 in a way that is functionally equivalent to local folders. It includes operations for creating, deleting and renaming mailboxes; checking for new messages; removing messages permanently; setting and clearing flags (read, replied to, forwarded, deleted etc); searching; and selective fetching of message attributes, texts and portions thereof. IMAP4 server listens on port 143 which is an unsecure channel or port 993 which is an implicit TLS port.</p> <p>Visual ![[Mail delivery.png]]</p>"},{"location":"emails.html#troubleshooting-email-delivery-failure","title":"Troubleshooting email delivery failure","text":"<p>Each step of this process can be a potential point of failure (that's why emails are so hard to troubleshoot). </p> <ol> <li>MUA:      Confirm with the client how their emails are being sent, is it an email or is it a form submission?          If it's an email, which email client are they using? Have they tried using the webmail client we offer?          If it's a form submission, how is it setup? Are they using a default PHP mailer or are they using an SMTP plugin? Access the admin page and review the configuration they have setup.          Check with them which mailbox the email is sent from and whether that is the only affected mailbox. Create a test mailbox and send an email to check whether the message is going through or not by sending it to your account.</li> <li>MTA:      Check for delivery failures in the logs;         Once you know which domain/mailbox are affected, you will be grepping the logs:         <code>$ cat /var/log/send/current | tai64nlocal | grep -iC 5 &lt;domain.com&gt;</code>          This command will allow you to check for emails that were sent from a particular domain.          # Side note - it is also possible to check cat /var/log/smtp/current log, however this log won't reveal much of anything. For basic troubleshooting, check the send log.</li> <li>MDA:      On managed apps we use dovecot. You can check the dovecot logs for information such as whether the user logging in is using IMAP/POP3 connection for example.         <code>cat /var/log/dovecot/dovecot.log</code></li> </ol>"},{"location":"emails.html#breakdown-of-the-mailing-process-using-qmail","title":"Breakdown of the mailing process using qmail","text":"<p>Example of qmail log: <pre><code>$ cat /var/log/send/current | tai64nlocal | grep 574692321\n2023-07-26 14:28:27.917076500 info msg 574692321: bytes 16593 from &lt;outlook_553EE1FF76D81E16@outlook.com&gt; qp 5228 uid 108\n\n2023-07-26 14:28:27.920988500 starting delivery 373: msg 574692321 to local myspareparts.com-maurice.niccoli@myspareparts.com\n\n2023-07-26 14:28:27.921004500 status: local 1/10 remote 0/255\n\n2023-07-26 14:28:27.921011500 starting delivery 374: msg 574692321 to local myspareparts.com-ben.veldman@myspareparts.com\n\n2023-07-26 14:28:27.921023500 status: local 2/10 remote 0/255\n\n2023-07-26 14:28:28.014981500 delivery 374: success: vdelivermail:_valiases_processed/did_0+0+1/\n\n2023-07-26 14:28:28.014983500 status: local 1/10 remote 0/255\n2023-07-26 14:28:28.046694500 delivery 373: success: vdelivermail:_valiases_processed/did_0+0+1/\n\n2023-07-26 14:28:28.046768500 status: local 0/10 remote 0/255\n2023-07-26 14:28:28.046819500 end msg 574692321\n</code></pre></p> <p>Step by step breakdown:</p> <p><code>$ tail /var/log/send/current | tai64nlocal</code> Lookup command: - <code>tai64nlocal</code>  &lt;- Time formatting</p> <p><code>2023-07-26 14:28:27.917076500 info msg 574692321: bytes 16593 from &lt;outlook_553EE1FF76D81E16@outlook.com&gt; qp 5228 uid 108</code></p> <ul> <li><code>2023-07-26 14:28:27.917076500</code> &lt;- Timestamp</li> <li><code>msg 574692321</code>  &lt;- Message number that can be used to tie log entries together and follow the process of any given message in the queue.</li> <li><code>from &lt;outlook_553EE1FF76D81E16@outlook.com&gt;</code> &lt;- The address to which any bounce messages will be sent if any of the recipients are unable or unwilling to accept the message.</li> <li><code>qp 5228</code> &lt;- process ID of the qmail-queue process which added the message to the queue. It's used to link the qmail-queue and qmail-send logs together.</li> <li><code>uid 108</code> &lt;- numeric UID under which the qmail-queue process was running when the message was added to the queue. </li> </ul> <p><code>2023-07-26 14:28:27.920988500 starting delivery 373: msg 574692321 to local myspareparts.com-maurice.niccoli@myspareparts.com</code></p> <ul> <li><code>starting delivery 373</code> &lt;- Message delivery has been started. </li> <li><code>to local myspareparts.com-maurice.niccoli@myspareparts.com</code> &lt;- This message tells you whether this is a local or remote delivery and the recipient's mail address.</li> </ul> <p><code>2023-07-26 14:28:27.921004500 status: local 1/10 remote 0/255</code> </p> <ul> <li><code>status: local 1/10 remote 0/255</code> &lt;- Every time a delivery process starts or ends, this message is sent to the log. In this example there are 10 concurrent local delivery slots available and 1 of those slots is being used, and there are 255 concurrent remote delivery slots available and 0 of them are being used</li> </ul> <p><code>2023-07-26 14:28:28.014981500 delivery 374: success: vdelivermail:_valiases_processed/did_0+0+1/</code> </p> <ul> <li> <p><code>delivery 374: success: vdelivermail:_valiases_processed/did_0+0+1/</code> &lt;- The delivery attempt 374 is finished and it was successful. The delivery code can be one of the following:</p> <ul> <li><code>success</code> &lt;- For a local delivery, qmail-local was able to successfully process a delivery. This can mean one of three things:<ul> <li>Message was stored in one or more Maildirs, forwarded to zero or more other email addresses, or processed through zero or more programs. The extra info looks like <code>did_0+0+1</code> :<ul> <li>message was stored in 0 Maildirs</li> <li>message was forwarded to 0 mail addresses</li> <li>message was processed by 1 program.</li> </ul> </li> </ul> </li> <li> <p><code>success</code> &lt;-For a remote delivery, qmail-remote was able to contact a remote SMTP server and that server accepted the message. That's all it tells you, it does not guarantee that the other server will be able to deliver the message to the correct mailbox, only that it accepted the responsibility for getting the message to where it needs to be.</p> </li> <li> <p><code>deferral</code>&lt;- There was some kind of a temporary error which prevented the delivery from succeeding, but the delivery will be tried again after a delay. The extra information will usually tell us why the message was not accepted.</p> </li> <li> <p><code>failure</code> &lt;-Delivery did not succeed and there isa good reason to believe that it will never succeed, so qmail-send won't attempt to send a message again.  </p> </li> </ul> </li> <li> <p><code>2023-07-26 14:28:28.046768500 status: local 0/10 remote 0/255</code>2023-07-26 14:28:28.046819500 end msg 574692321` &lt;- The queue is empty and the message is being deleted from the queue. </p> </li> </ul> <p>Log locations:</p> <ul> <li>qmail-send <code>/var/log/send/current</code></li> <li>qmail-smtp inc&amp;out <code>/var/log/smtp/current</code></li> <li>IMAP  (legacy SIP) <code>/var/log/imap4-ssl/current</code></li> <li>POP  (legacy SIP)<code>/var/log/pop3-ssl/current</code></li> <li>POP and IMAP (cloudhost and recent dedicated servers) <code>/var/log/dovecot</code></li> <li>Inbound SpamAssassin scoring <code>/var/log/maillog</code></li> </ul>"},{"location":"icmp.html","title":"What is the Internet Control Message Protocol (ICMP)?","text":"<p>The Internet Control Message Protocol (ICMP) is a network layer protocol used by network devices to diagnose network communication issues. ICMP is mainly used to determine whether or not data is reaching its intended destination in a timely manner. Commonly, the ICMP protocol is used on network devices, such as routers. ICMP is crucial for error reporting and testing, but it can also be used in distributed denial-of-service (DDoS) attacks.</p>"},{"location":"icmp.html#what-is-icmp-used-for","title":"What is ICMP used for?","text":"<p>The primary purpose of ICMP is for error reporting. When two devices connect over the Internet, the ICMP generates errors to share with the sending device in the event that any of the data did not get to its intended destination. For example, if a packet of data is too large for a router, the router will drop the packet and send an ICMP message back to the original source for the data.</p> <p>A secondary use of ICMP protocol is to perform network diagnostics; the commonly used terminal utilities traceroute and ping both operate using ICMP. The traceroute utility is used to display the routing path between two Internet devices. The routing path is the actual physical path of connected routers that a request must pass through before it reaches its destination. The journey between one router and another is known as a \u2018hop,\u2019 and a traceroute also reports the time required for each hop along the way. This can be useful for determining sources of network delay.</p> <p>The ping utility is a simplified version of traceroute. A ping will test the speed of the connection between two devices and report exactly how long it takes a packet of data to reach its destination and come back to the sender\u2019s device. Although ping does not provide data about routing or hops, it is still a very useful metric for gauging the latency between two devices. The ICMP echo-request and echo-reply messages are commonly used for the purpose of performing a ping.</p> <p>Unfortunately network attacks can exploit this process, creating means of disruption such as the ICMP flood attack and the ping of death attack.</p>"},{"location":"icmp.html#how-does-icmp-work","title":"How does ICMP work?","text":"<p>Unlike the Internet Protocol (IP), ICMP is not associated with a transport layer protocol such as TCP or UDP. This makes ICMP a connectionless protocol: one device does not need to open a connection with another device before sending an ICMP message. Normal IP traffic is sent using TCP, which means any two devices that exchange data will first carry out a TCP handshake to ensure both devices are ready to receive data. ICMP does not open a connection in this way. The ICMP protocol also does not allow for targeting a specific port on a device.</p>"},{"location":"icmp.html#what-is-an-icmp-packet","title":"What is an ICMP packet?","text":"<p>An ICMP packet is a packet that uses the ICMP protocol. ICMP packets include an ICMP header after a normal IP header. When a router or server needs to send an error message, the ICMP packet body or data section always contains a copy of the IP header of the packet that caused the error.</p>"},{"location":"internet-models.html","title":"OSI Seven-Layer Model","text":"<p>OSI 7-layer model is a conceptual network format which encourages modular design in networking, meaning that each layer has as little to do with the operation of other layers as possible.</p> <p>Mnemonic: Please Do Not Throw Sausage Pizza Away. </p> <p>The seven layers include:</p> <ul> <li>Layer 7: Application</li> <li>Layer 6: Presentation</li> <li>Layer 5: Session</li> <li>Layer 4: Transport</li> <li>Layer 3: Network\u00a0</li> <li>Layer 2: Data Link</li> <li>Layer 1: Physical</li> </ul>"},{"location":"internet-models.html#layer-7-application-layer","title":"Layer  7. Application layer:","text":"<p>Being the topmost layer of the OSI model, this is the only layer that directly interacts with data from the user. Software applications like web browsers and email clients rely on the application layer to initiate communications. </p> <p>The software applications are not part of the application layer by themselves, but rather the application layer is responsible for the protocols and data manipulation that the software relies on to present meaningful data to the user.</p> <p>Once the user's data has been gathered, application layer will make a connection with the bottom layer - presentation layer for further manipulation. </p> <p>Application layer protocols:</p> <ul> <li><code>HTTP</code> &amp; <code>HTTPS</code></li> <li><code>FTP</code></li> <li><code>SMTP</code></li> <li><code>DNS</code></li> <li><code>DHCP</code></li> <li><code>SSH</code></li> </ul>"},{"location":"internet-models.html#layer-6-presentation-layer","title":"Layer 6. Presentation layer:","text":"<p>The presentation layer is responsible for handling the syntax and semantics of the information exchanged between network devices. </p> <p>It handles data conversion, encryption and compression.</p> <ul> <li>Data conversaon </li> <li>Data Encryption </li> <li>Data compression </li> </ul>"},{"location":"internet-models.html#layer-5-session-layer","title":"Layer 5. Session layer","text":"<p>In a network, multiple applications running on different systems may need to communicate with one another. This process is called a session, and the Session layer handles these interactions. It provides the mechanisms for establishing a session between applications, maintaining the session and ending the session once the communication is complete. It also provides mechanisms for synchronization and recovery in case of communication failure or interruptions.\u00a0</p> <p>Lets say we are running an email client, a web browser and a torrent applications at the same time. Each of these applications will be using a different session, which is managed by this layer. This is the reason why we can at the same time have a browser, mail client and torrent client open for example. This layer will assign each of these applications a session so that the data can be managed accordingly. </p>"},{"location":"internet-models.html#layer-4-transport-layer-segmentation-and-reassembly","title":"Layer 4: Transport Layer - Segmentation and Reassembly","text":"<p>Unlike the name would suggest, transport layer does not transport data between different devices. Transport layer's job is to break down data from the upper layers into digestible chunks and to append header with source and destination [[PORTS|port]] so that the machines on a network know which service said data chunks are meant for.</p> <ul> <li>Source port is required on the source machine in cases where we have multiple applications using the same protocol. If, for example, we had multiple browsers installed, when we try to access a website on one through HTTP, we do not want the result to be opened in another browser. Source port will be a random number between 1024-65535.</li> <li>Destination port will depend on which service we require from the destination machine, and will be provided by the application layer. It will most commonly be one of the well known ports (1-1024).</li> </ul> <p>This process is called segmentation, and said chunks are called segments or datagrams.</p> <p>The receiving system then does the reassembly of these segments - recognizes the incoming packets as one data transmission, reassembles the packets correctly based on the information included in the packets by the sending system and verifies that all the packets for that piece of data arrived in good shape.\u00a0</p> <p>The primary functions of the Transport Layer are:</p> <ul> <li> <p>To enable efficient network transmission, the Transport Layer splits the total amount of data it gets from the applications running at the top layers into smaller units known as segments. The Transport Layer puts these bits back together into the original data stream at the other end.</p> </li> <li> <p>In situations when organised data transfer is required, the Transport Layer creates a connection between the source and the destination. In order to create the proper parameters and guarantee that both systems are prepared to communicate data, a handshake protocol is established. When the data transfer is complete, the Transport Layer closes the connection.</p> </li> <li> <p>The transport layer also assures dependable data transmission. Receiving acknowledgments, or ACK bits, is how this is accomplished. While waiting for the recipient to acknowledge the parts it sent, the sender keeps an eye on them. Any damaged segments are retransmitted by the sender if they receive an acknowledgment.</p> </li> <li> <p>Flow regulation - In order to prevent data overload, transport layer regulates the data transfer rate. </p> </li> <li> <p>Both error detection and repair are handled by the transport layer. Checksums are one of these techniques for error detection. By computing and validating checksums, it can ascertain whether data was tampered with during transmission. The Transport Layer will request retransmission if it finds anything.</p> </li> </ul> <p>Depending on whether the connection favors performance or stability, we differentiate two transport layer protocols: - [[TCP vs UDP]]</p>"},{"location":"internet-models.html#layer-3-network-layer","title":"Layer 3: Network Layer","text":"<p>Because these segments will need to travel all over the Internet along different pathways, we need a mechanism that knows once the segment does arrive, which pathway it's supposed to be sent down to so that it all gets to the final destination. This is handled by the Network layer.</p> <p>Network layer will take the segment from the Transport layer, re-encapsulate it by adding a header to it which will have a source and destination IP address. We call this chunk a packet.</p> <p>By far the most common protocol that is used on the Network layer is IPv4 (but it's not the only one).</p> <p>Network Layer handles functions such as: - Assigning Logical Address to devices which are connecting to a network to send/receive data packets.  - Routing - process of identifying the best path to transmit the packets - Host-to-host delivery or Forwarding - process in which the network layer transmits or forwards the data via routers after determining the best path. - Logical subnetting - dividing a bigger network into smaller chunks so that IP addresses are used more efficiently.  - Network Address Translation (NAT) - process of converting any private IP address into a public IP address.</p>"},{"location":"internet-models.html#network-layer-protocols","title":"Network Layer protocols:","text":"<ul> <li>[[Internet Protocol]]</li> <li>[[ICMP]]</li> </ul>"},{"location":"internet-models.html#layer-2-data-link-layer","title":"Layer 2: Data-Link Layer","text":"<p>When we say \"link\", we mean two devices connecting together. Everything up to this layer was a machine readable data. Data-Link layer has a job to take said data and connect it to the last layer - Physical layer. It does this by taking the packet provided by the Network layer and encapsulates it in a frame. </p> <p>Data-Link does splits its job into  two sublayers: - Logical Link Control (LLC) layer talks to the operating system through drivers and handles multiple network protocols and provides flow control. - Media Access Control (MAC) layer creates and addresses the frame. It adds NIC\u2019s MAC address and attaches MAC addresses to the frame, adds and checks the FCS and ensures that frames are sent along the network cabling.\u00a0</p> <p>A frame will consist of a header and a trailer attached to it. Trailer exists because much like all the other layers, Data-Link is also governed by protocols (Ethernet being the most common). </p> <p>Data transmission involves a stream of signals through a physical device, and in nature there are many signals which are just static noise. In order to differentiate data transferred between devices from a static noise, we attach a trailer to the packet. With it, destination device can recognize said stream of data and know how to handle it.</p>"},{"location":"internet-models.html#layer-1-physical-layer","title":"Layer 1: Physical layer","text":"<p>Network needs a physical channel through which the data can be transferred. Most common type is the UTP cable (unshielded twisted pair) which can transmit and receive data, as well as a central box (Hub/Switch) that handles a flow from one machine to another. Each system on a network has a cable connected to the central box.</p> <p>Network Interface Card (NIC) serves as the interface between the PC and the network. Each NIC has a unique identifier with a 48-bit value called media access control address (MAC address) so data is transferred to the right system. No two NICs ever share the same MAC address. Those numbers are provided by Institute of Electrical and Electronics Engineers (IEEE) to the companies making NICs, which often print the numbers onto the device itself using hexadecimal notation.  - Example: 00\u201340\u201305\u201360\u20137D\u201349</p> <p>First six digits in MAC address represent the number of the NIC manufacturer and they are referred to as Organizationally Unique Identifier (OUI) while the last six digits represent the unique serial number for the NIC and are referred to as device ID. Nomenclature for MAC addresses is also known as MAC-48 and EUI-48 (Extended Unique Identifier, chosen for trademarking purposes).\u00a0</p> <p>NICs transfer the information through the UTP cable in the form of binary data that is broken down into discrete chunks called frames. The NICs create and send, as well as receive and read these frames. Different frames are used on different networks and all NICs on the same network must use the same frame type to communicate with other NICs.</p> <p>(Optional)     Frame begins with the MAC address of the NIC to which the data is to be sent, followed by the MAC address of the sending NIC. Next comes the Types\u00a0field which indicates the type of data transferred, followed by the Data field which contains the encapsulated information. Lastly, there is a special bit of checking information called frame check sequence. FCS uses a type of binary math called cyclic redundancy check (CRC) in order to verify that the data has arrived intact. Most wired connections hold up to 1500 bytes of data.\u00a0</p> <p>When a system sends a frame out on the network, the frame goes into the central box. What happens from that point depends on the type of central box. - Hub could make a copy of the frame and send it to all the connected ports except for the port from which the message originated. Only the NIC to which the frame was addressed would process that frame and the others would drop it when they saw it wasn\u2019t addressed to their MAC addresses. - Switch sent a frame only to the interface associated with the destination of the MAC address.</p> <p>(Optional)     In situations where NIC doesn\u2019t know the MAC address of another NIC, they send a broadcast onto the network to ask for it. If a NIC sends a frame using a broadcast address (MAC address FF-FF-FF-FF-FF-FF), that frame is processed by every single NIC on that network. That broadcast frame\u2019s data will contain a request for a system\u2019s MAC address. Without knowing the MAC address to begin with, the requesting computer will use an IP address to pick the target computer out of the crowd. The system that is sought will read the request in the broadcast frame and respond its MAC address.</p> <p>When the frame finally arrives to the destination machine, the entire process will be reversed. - Data Link will remove the header and a trailer from the frame and pass the packet along to the Network layer. - Network layer will remove the header and pass the packet to the Transport layer. - Transport layer will read the destination port and transfer the frame to the appropriate service in the upper layers.</p> <p>PDU - protocol data unit</p>"},{"location":"internet-models.html#tcpip-model","title":"TCP/IP model","text":"<p>The reason why TCP/IP model has this name is because the persons who developed it focused primarily on these two protocols. Back in the day of Arpanet, they needed to be sure that the data was reliable.</p>"},{"location":"internet-models.html#the-application-layer","title":"The Application layer","text":"<p>The Application layer combines the top three layers of the OSI model and its responsible for providing network services and applications to end-users.</p> <p>Although we can say that the OSI Presentation layer is part of the TCP/IP Application layer, no application requires any particular form of presentation as seen by the OSI model. Applications in TCP/IP already use standardized formats that everyone understands.\u00a0</p> <p>Furthermore, Session Layer's responsibilities are also handled by applications themselves - every application has to be able to initiate, control and disconnect from a remote system. There is no clearly defined way to do this and each TCP/IP application uses its own methods.</p> <p>All applications can talk to the network, so long they are part of the network. They also need to be part of the network to function: Web browsers, e-mail clients, multiplayer games etc.</p> <p>Just like in the OSI model, the Application Layer will produce a stream of data which will be handed off to the layer below it.</p>"},{"location":"internet-models.html#the-transport-layer","title":"The Transport Layer","text":"<p>The Transport Layer is equivalent to the OSI Transport layer. It\u2019s responsible for providing reliable end-to-end communication between applications running on different hosts. </p> <p>Much like it's OSI equivalent, Transport Layer will produce segments from the data that the Application Layer provided. It doesn't care how data is delivered because at some point of the data transfer, the destination device will have to know how to handle the data which Application Layer produced.</p> <p>Transport Layer includes two protocols - Transmission Control Protocol (TCP) and User Datagram Protocol (UDP).\u00a0</p> <ul> <li> <p>TCP is a connection-oriented protocol that provides reliable, ordered and error checked delivery of data between applications. As a consequence of adding all of those mechanisms, the data transmission will be reliable but slow.</p> </li> <li> <p>UDP is a connectionless communication that provides an unreliable, unordered and unchecked delivery of data. The trade-off is that the data transmission is much faster because it doesn't have to append extra bits to the segment. It\u2019s used with software like VoIP or video streaming.</p> </li> </ul> <p>TCP segments include fields:</p> <ul> <li>Destination port</li> <li>Source port</li> <li>Sequence number</li> <li>Checksum</li> <li>Flags</li> <li>Acknowledgement</li> <li>Data</li> </ul> <p>UDP on the other hand also gets the data from the Application layer and adds port and length numbers, as well as a checksum to create a container called a UDP datagram. UDP doesn\u2019t care if the receiving computer gets all its data, which is why UDP datagram lacks most of the fields found in TCP segments.</p> <p>In summary, data arrives from the Application layer which is then broken up into fragments, given destination, source and sequence numbers and then shipped to the Internetworking Layer to be wrapped into an IP packet.\u00a0</p>"},{"location":"internet-models.html#the-internetworking-layer","title":"The Internetworking Layer","text":"<p>The Internetworking layer is equivalent to OSI Network Layer and is responsible for handling logical addressing and routing (forwarding). </p> <p>The main protocol used on this layer Internet Protocol which provides a unique IP address to each device on the network. Any device or protocol that deals with pure IP packets sits on the Internetworking Layer. </p> <p>The Internet layer doesn\u2019t care what type of data the IP packet carries, nor does it care whether the data gets there in good order or not. That is handled by the Transport layer.</p> <p>Internetworking layer will take the segment provided by the Transport Layer and will create a packet.</p>"},{"location":"internet-models.html#network-access-layer","title":"Network Access Layer","text":"<p>Network Access Layer groups up the last two layers of the OSI model - Data-Link and Physical. The keyword in this layer is access - this layer deals with any physical (hardware) part of the network.</p>"},{"location":"magento.html","title":"Magento","text":""},{"location":"magento.html#redis","title":"Redis","text":""},{"location":"magento.html#elasticsearch","title":"ElasticSearch","text":""},{"location":"ping-traceroute-netstat.html","title":"Basic tools for computer network analysis","text":""},{"location":"ping-traceroute-netstat.html#ping","title":"ping","text":""},{"location":"ping-traceroute-netstat.html#traceroute-tracepath","title":"traceroute &amp; tracepath","text":""},{"location":"ping-traceroute-netstat.html#netstat","title":"netstat","text":""},{"location":"ports.html","title":"Ports","text":"<p>The HTML specification is maintained by the W3C.</p> <p>Port is a logical connection used by programs and services to exchange information. It determines which program or service on a computer or server is going to be used.  All ports are identified by the unique number that ranges from 0-65535. </p> <p>Whenever a device attempts to make a connection to another device on the network, a port will be paired up with an IP address. An IP address will be used to determine the physical location of the server, while the port will determine which service that server wants to use. </p> <p>We can use Netstat utility (network statistics) in order to display current network connections and port activities on our computer. </p> <pre><code>sandar@nova:~$ netstat -n\nActive Internet connections (w/o servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \ntcp        0      0 192.168.1.110:22        192.168.1.103:42470     ESTABLISHED\ntcp6       0      0 192.168.1.110:80        192.168.1.107:62563     FIN_WAIT2  \ntcp6       0      0 192.168.1.110:80        192.168.1.107:62550     TIME_WAIT  \n</code></pre> <p>Port numbers are assigned by IANA - Internet assigned Numbers Authority. They are broken down into three categories:</p> Port numbers Port names 0-1023 System/Well Known Ports 1024-49151 User/Registered ports 49152-65535 Dynamic/Private ports <p>First two categories are used by the server to which our device connects to, while the last one is the one that device assigns itself during the session.</p> Application TCP/UDP Port Notes FTP TCP 20/21 File transfer SSH TCP 22 Secure remote control Telnet TCP 23 Remote control SMTP(S) TCP 25/587 Sending emails DNS UDP 53 Naming DHCP UDP 67/68 Assigns IPs HTTP(S) TCP 80/443 Web(secure) POP3(S) TCP 110/995 Email retrieval(secure) IMAP4 TCP 143/993 Email retrieval (secure) MySQL TCP 3306 Database server"},{"location":"protocols.html","title":"Protocols","text":""},{"location":"protocols.html#what-is-the-internet-protocol-ip","title":"What is the Internet Protocol (IP)?","text":"<p>The Internet Protocol (IP) is a protocol, or set of rules, for routing and addressing packets of data so that they can travel across networks and arrive at the correct destination. Data traversing the Internet is divided into smaller pieces, called packets. IP information is attached to each packet, and this information helps routers to send packets to the right place. Every device or domain that connects to the Internet is assigned an IP address, and as packets are directed to the IP address attached to them, data arrives where it is needed.</p> <p>Once the packets arrive at their destination, they are handled differently depending on which transport protocol is used in combination with IP. The most common transport protocols are TCP and UDP.</p>"},{"location":"protocols.html#what-is-a-network-protocol","title":"What is a network protocol?","text":"<p>In networking, a protocol is a standardized way of doing certain actions and formatting data so that two or more devices are able to communicate with and understand each other.</p> <p>To understand why protocols are necessary, consider the process of mailing a letter. On the envelope, addresses are written in the following order: name, street address, city, state, and zip code. If an envelope is dropped into a mailbox with the zip code written first, followed by the street address, followed by the state, and so on, the post office won't deliver it. There is an agreed-upon protocol for writing addresses in order for the postal system to work. In the same way, all IP data packets must present certain information in a certain order, and all IP addresses follow a standardized format.</p>"},{"location":"protocols.html#what-is-an-ip-address-how-does-ip-addressing-work","title":"What is an IP address? How does IP addressing work?","text":"<p>An IP address is a unique identifier assigned to a device or domain that connects to the Internet. Each IP address is a series of characters, such as '192.168.1.1'. Via DNS resolvers, which translate human-readable domain names into IP addresses, users are able to access websites without memorizing this complex series of characters. Each IP packet will contain both the IP address of the device or domain sending the packet and the IP address of the intended recipient, much like how both the destination address and the return address are included on a piece of mail.</p>"},{"location":"protocols.html#ipv4-vs-ipv6","title":"IPv4 vs. IPv6","text":"<p>The fourth version of IP (IPv4 for short) was introduced in 1983. However, just as there are only so many possible permutations for automobile license plate numbers and they have to be reformatted periodically, the supply of available IPv4 addresses has become depleted. IPv6 addresses have many more characters and thus more permutations; however, IPv6 is not yet completely adopted, and most domains and devices still have IPv4 addresses.</p>"},{"location":"protocols.html#what-is-an-ip-packet","title":"What is an IP packet?","text":"<p>IP packets are created by adding an IP header to each packet of data before it is sent on its way. An IP header is just a series of bits (ones and zeros), and it records several pieces of information about the packet, including the sending and receiving IP address. IP headers also report:</p> <ul> <li>Header length</li> <li>Packet length</li> <li>Time to live (TTL), or the number of network hops a packet can make before it is discarded</li> <li>Which transport protocol is being used (TCP, UDP, etc.)</li> </ul> <p>In total there are 14 fields for information in IPv4 headers, although one of them is optional.</p>"},{"location":"protocols.html#how-does-ip-routing-work","title":"How does IP routing work?","text":"<p>The Internet is made up of interconnected large networks that are each responsible for certain blocks of IP addresses; these large networks are known as autonomous systems (AS). A variety of routing protocols, including BGP, help route packets across ASes based on their destination IP addresses. Routers have routing tables that indicate which ASes the packets should travel through in order to reach the desired destination as quickly as possible. </p> <p>Packets travel from AS to AS until they reach one that claims responsibility for the targeted IP address. That AS then internally routes the packets to the destination.</p> <p>Packets can take different routes to the same place if necessary, just as a group of people driving to an agreed-upon destination can take different roads to get there.</p>"},{"location":"protocols.html#what-is-tcpip","title":"What is TCP/IP?","text":"<p>The Transmission Control Protocol (TCP) is a transport protocol, meaning it dictates the way data is sent and received. A TCP header is included in the data portion of each packet that uses TCP/IP. Before transmitting data, TCP opens a connection with the recipient. TCP ensures that all packets arrive in order once transmission begins. Via TCP, the recipient will acknowledge receiving each packet that arrives. Missing packets will be sent again if receipt is not acknowledged.</p> <p>TCP is designed for reliability, not speed. Because TCP has to make sure all packets arrive in order, loading data via TCP/IP can take longer if some packets are missing.</p> <p>TCP and IP were originally designed to be used together, and these are often referred to as the TCP/IP suite. However, other transport protocols can be used with IP.</p>"},{"location":"protocols.html#what-is-udpip","title":"What is UDP/IP?","text":"<p>The User Datagram Protocol, or UDP, is another widely used transport protocol. It is faster than TCP, but it is also less reliable. UDP does not make sure all packets are delivered and in order, and it does not establish a connection before beginning or receiving transmissions.</p>"},{"location":"ssl.html","title":"SSL","text":""},{"location":"ssl.html#ssl-secure-sockets-layer","title":"SSL - Secure Sockets Layer","text":"<p>SSL, or Secure Sockets Layer, is an encryption-based Internet security protocol. SSL encrypts data that is transmitted across the web. SSL is the predecessor to the modern TLS (Transport Layer Security) encryption used today (but people still refer to it as SSL).</p> <p>Anyone who tries to intercept this data will only see a garbled mix of characters that is nearly impossible to decrypt.</p> <p>SSL initiates an authentication process called a handshake between two communicating devices to ensure that both devices are really who they claim to be. SSL also digitally signs data in order to provide data integrity, verifying that the data is not tampered with before reaching its intended recipient.</p> <ul> <li>Secure Socket Layer</li> <li>SSL encrypts data that is transmitted across the web</li> <li>It initiates an auth process called a handshake between the two communicating devices to make sure that both are what they claim to be</li> <li>It\u2019s now TLS, but still called SSL</li> </ul> <p>https://www.cloudflare.com/learning/ssl/what-is-ssl/</p> <p>SSL (Secure Sockets Layer) also referred to as the TLS (Transport Layer Security) is a form of asymmetric encryption of data on the internet. </p> <p>Originally, data on the Web was transmitted in plaintext that anyone could read if they intercepted the message. For example, if a consumer visited a shopping website, placed an order, and entered their credit card number on the website, that credit card number would travel across the Internet unconcealed. SSL was created to correct this problem and protect user privacy. </p> <p>By encrypting any data that goes between a user and a web server, SSL ensures that anyone who tries to intercept this data will only see a garbled mix of characters that is nearly impossible to decrypt. </p>"},{"location":"ssl.html#what-is-an-ssl-certificate","title":"What is an SSL certificate?","text":"<p>An SSL certificate is a text file hosted in a website's origin server which contains the website's public key and devices attempting to communicate with the origin server will reference this file to obtain the public key and verify the server's identity. </p> <p>In order to get an SSL certificate, a Certificate Signing Request (CSR) has to be created first. Information that CSR includes is:</p> <ul> <li>Fully-Qualified Domain Name (FQDN)</li> <li>Legal name of the organization</li> <li>Division of the Organization</li> <li>City</li> <li>Region</li> <li>Country</li> <li>Email address</li> </ul> <p>Once a CSR is created, an SSL certificate can then be purchased from the CA. A CA is an outside organization, a trusted third party, that generates and gives out SSL certificates. Once the certificate is issued, it needs to be installed and activated on the website's origin server and when it's activated on the origin server, the website will be able to load over HTTPS and all traffic to and from the website will be encrypted and secure.</p> <p>SSL certificates include the following information in a single data file:</p> <ul> <li>The\u00a0domain name that the certificate was issued for</li> <li>Which person, organization, or device it was issued to</li> <li>Which certificate authority issued it</li> <li>The certificate authority's digital signature</li> <li>Associated subdomains</li> <li>Issue date of the certificate</li> <li>Expiration date of the certificate</li> <li>The public key (the private key is kept secret)</li> </ul> <p>The public and private keys used for SSL are essentially long strings of characters used for encrypting and signing data. Data encrypted with the public key can only be decrypted with the private key during the process known as an SSL handshake:</p> <ul> <li> <p>Step 1: The SSL/TLS client will send the server a \u201cClientHello\u201d message that includes information about the browser, the OS, SSL/TLS version and the encryption algorithm that the client supports.</p> </li> <li> <p>Step 2: The SSL/TLS server sends back a \u201cServerHello\u201d message with an agreement on which encryption algorithm they should use during the session, it's digital certificate containing the domain name and certificate authority, and the public key they would use for encryption.</p> </li> <li> <p>Step 3: The client then confirms that the web server\u2019s digital certificate is valid and issued by a CA. </p> <p>Technically, anyone can create their own SSL certificate by generating a public-private key pairing and including all the information mentioned above. Such certificates are called self-signed certificates because the digital signature used, instead of being from a CA, would be the website's own private key.</p> <p>But with self-signed certificates, there's no outside authority to verify that the origin server is who it claims to be. Browsers don't consider self-signed certificates trustworthy and may still mark sites with one as \"not secure,\" despite the https:// URL. They may also terminate the connection altogether, blocking the website from loading.</p> </li> <li> <p>Step 4: If the certificate is valid, client extracts the public key and generates a new key for that particular session, then encrypts the session key with the public key and sends it back to the server.</p> </li> <li>Step 5: The SSL/TLS server decrypts the session key using its private key.</li> <li>Step 6: Both the client and the server now use the session key to communicate.</li> <li>Step 7: Finally, both the server and the client now exchange the finished messages using the new session key. This message states that the handshake is complete. </li> </ul>"},{"location":"ssl.html#types-of-ssl-certificates","title":"Types of SSL certificates:","text":"<ul> <li>Number of sites they cover:<ul> <li>Single domain</li> <li>Wildcard - includes the main domain and all of the subdomains</li> <li>Multi-domain - applies to multiple unrelated domains</li> </ul> </li> <li>Validation level:<ul> <li>Domain validation - business has to prove they control the domain</li> <li>Organization validation - CA directly contacts a person or business requesting the certificate</li> <li>Extended validation - full background check of an organization </li> </ul> </li> </ul>"},{"location":"ssl.html#ssl-verification-methods","title":"SSL verification methods:","text":"<ul> <li>HTTP validation method:     Inside of docroot create a directory .well-known/pki-validation/gsdv.txt, and inside of it add the metatag that SSL provides</li> <li>Email verification</li> <li>DNS verification</li> </ul>"},{"location":"wordpress.html","title":"WP-CLI","text":""},{"location":"faq/what-dns.html","title":"DNS","text":"Random Title <p>You are expected to know all of the DNS records.  These are just the ones they most commonly ask about. </p>"},{"location":"faq/what-dns.html#what-is-dns","title":"What is DNS?","text":""},{"location":"faq/what-dns.html#explain-dns-resolution-process-what-happens-when-we-type-in-domaincom-in-the-browser","title":"Explain DNS resolution process - what happens when we type in domain.com in the browser?","text":""},{"location":"faq/what-dns.html#what-are-root-nameservers-and-how-many-of-them-are-out-there","title":"What are root nameservers and how many of them are out there?","text":""},{"location":"faq/what-dns.html#what-are-tld-nameservers-what-is-the-difference-between-gtld-and-cctld","title":"What are TLD nameservers? What is the difference between gTLD and ccTLD?","text":""},{"location":"faq/what-dns.html#what-is-a-domain-registrar-what-do-we-define-there","title":"What is a domain registrar? What do we define there?","text":""},{"location":"faq/what-dns.html#what-are-authoritative-nameservers-what-would-happen-if-we-created-a-dns-zone-for-googlecom","title":"What are authoritative nameservers? What would happen if we created a DNS zone for google.com?","text":""},{"location":"faq/what-dns.html#what-is-bindnamed","title":"What is BIND/named?","text":""},{"location":"faq/what-dns.html#explain-the-output-of-dig-trace-domaincom","title":"Explain the output of <code>`dig +trace domain.com`</code>.","text":""},{"location":"faq/what-dns.html#dns-records","title":"DNS records:","text":""},{"location":"faq/what-dns.html#why-do-we-use-cname-records","title":"Why do we use CNAME records?","text":""},{"location":"faq/what-dns.html#are-mx-records-used-for-sending-emails-receiving-emails-or-both-how-do-we-set-up-an-mx-record","title":"Are MX records used for sending emails, receiving emails or both? How do we set up an MX record?","text":""},{"location":"faq/what-dns.html#what-is-the-spf-record","title":"What is the SPF record?","text":"<p>Explain the following syntax </p> <p><code>`v=spf1 -a +mx +ip4:11.12.13.14 +include:relay.mailchannels.com -all`</code></p>"},{"location":"faq/what-dns.html#name-all-records-that-are-used-for-mail-authentication","title":"Name all records that are used for mail authentication?","text":""},{"location":"faq/what-dns.html#what-is-soa-record","title":"What is SOA record?","text":""},{"location":"faq/what-dns.html#what-is-a-glue-record","title":"What is a GLUE record?","text":""},{"location":"faq/what-dns.html#what-is-fqdn","title":"What is FQDN?","text":""},{"location":"faq/what-emails.html","title":"Emails","text":""},{"location":"faq/what-emails.html#what-happens-when-we-write-an-email-and-press-send-how-does-it-arrive-to-the-recipient-and-what-happens-in-the-meantime","title":"What happens when we write an email and press send? How does it arrive to the recipient and what happens in the meantime?","text":""},{"location":"faq/what-emails.html#which-programs-are-used-when-delivering-emails-what-is-the-muamtamdamsa","title":"Which programs are used when delivering emails? What is the MUA/MTA/MDA/MSA","text":""},{"location":"faq/what-emails.html#which-ports-are-used-by-individual-mail-services-and-what-would-happen-if-we-disabled-port-25","title":"Which ports are used by individual mail services, and what would happen if we disabled Port 25?","text":""},{"location":"faq/what-linux.html","title":"Linux","text":""},{"location":"faq/what-linux.html#explain-linux-boot-process","title":"Explain Linux boot process:","text":""},{"location":"faq/what-linux.html#what-are-bios-and-uefi","title":"What are BIOS and UEFI","text":""},{"location":"faq/what-linux.html#what-is-a-bootloader-which-bootloader-do-we-currently-use-name-a-few-others","title":"What is a bootloader? Which bootloader do we currently use? Name a few others.","text":""},{"location":"faq/what-linux.html#what-is-linux-kernel-and-what-are-four-main-kernel-roles","title":"What is Linux Kernel and what are four main kernel roles?","text":""},{"location":"faq/what-linux.html#what-is-a-daemon-and-what-is-init-explain-the-difference-between-sysvinit-upstart-and-systemd","title":"What is a daemon, and what is init? Explain the difference between sysVinit, upstart and systemd.","text":""},{"location":"faq/what-linux.html#what-is-a-swap-memory-what-is-the-difference-between-swap-partition-and-a-swap-file","title":"What is a SWAP memory? What is the difference between swap partition and a swap file?","text":""},{"location":"faq/what-linux.html#what-is-a-pseudo-filesystem","title":"What is a pseudo filesystem?","text":""},{"location":"faq/what-linux.html#what-are-linux-permissions-and-how-do-they-work","title":"What are Linux permissions and how do they work?","text":""},{"location":"faq/what-linux.html#what-is-the-difference-between-find-and-locate-commands-when-would-you-use-one-and-when-the-other","title":"What is the difference between find and locate commands? When would you use one, and when the other?","text":""},{"location":"faq/what-linux.html#how-does-the-mount-command-work","title":"How does the mount command work?","text":""},{"location":"faq/what-linux.html#what-are-iptables-what-is-csfapf","title":"What are IPtables? What is CSF/APF?","text":""},{"location":"faq/what-linux.html#linux-filesystem-structure","title":"Linux filesystem structure","text":"<ul> <li><code>/etc/passwd</code>, <code>/etc/shadow</code>,<code>/proc</code>, <code>/etc/fstab</code> , <code>/etc/hosts</code>, <code>/etc/nsswitch.conf</code>. </li> </ul>"},{"location":"faq/what-linux.html#what-is-sudo-what-is-a-wheel-group-how-would-we-check-which-groups-users-belong-into","title":"What is sudo, what is a wheel group? How would we check which groups users belong into?","text":""},{"location":"faq/what-linux.html#what-is-linux-niceness","title":"What is Linux niceness?","text":""},{"location":"faq/what-linux.html#what-is-umask","title":"What is umask?","text":""},{"location":"faq/what-networking.html","title":"Networking","text":""},{"location":"faq/what-networking.html#what-is-a-private-and-what-is-a-public-ip-address-name-private-ip-ranges","title":"What is a private and what is a public IP address? Name private IP ranges.","text":""},{"location":"faq/what-networking.html#how-many-bits-are-in-ipv4-how-many-in-ipv6","title":"How many bits are in IPv4, how many in IPv6?","text":""},{"location":"faq/what-networking.html#what-is-dhcpnatcidr-what-is-subnetting","title":"What is DHCP/NAT/CIDR? What is subnetting?","text":""},{"location":"faq/what-networking.html#what-is-127001-and-1","title":"What is 127.0.0.1 and ::1?","text":""},{"location":"faq/what-networking.html#what-is-an-osi-7-layer-model-and-how-does-it-correlate-to-tcpip-model","title":"What is an OSI 7 layer model and how does it correlate to TCP/IP model?","text":""},{"location":"faq/what-networking.html#what-are-tcp-and-udp-and-when-are-they-used-what-is-a-three-way-handshake","title":"What are TCP and UDP and when are they used? What is a three way handshake?","text":""},{"location":"faq/what-networking.html#what-are-ping-traceroute-utilities-used-for-do-they-use-ports-what-is-icmp","title":"What are ping &amp; traceroute utilities used for? Do they use ports? What is ICMP?","text":""},{"location":"linux/file-management.html","title":"File management","text":"<p>Linux file management involves organizing, accessing, and manipulating files and directories within the Linux operating system.  Users interact with files using commands like <code>ls</code> (list), <code>cp</code> (copy), <code>mv</code> (move), and <code>rm</code> (remove).  Directories, or folders, provide a hierarchical structure for organizing files. Permissions control access to files, determining who can <code>read</code>, <code>write</code>, or <code>execute</code> them. Key concepts include file <code>ownership</code>, represented by <code>users</code> and <code>groups</code>, and <code>symbolic links</code>, which are pointers to other files or directories. Understanding these fundamentals enables efficient navigation and management of files in the Linux environment.</p>"},{"location":"linux/file-management.html#creating-copying-deleting-and-renaming","title":"Creating, copying, deleting and renaming","text":"<ul> <li><code>touch</code> creates a new, empty file</li> <li><code>rm</code> permanently remove file/directory</li> <li> <p><code>cp</code> copying files/directories from one location to another; example:</p> <pre><code>$ cp [...file/directory-sources] [destination]\n\n# [file/directory-sources] specifies the sources of the files or directories you want to copy. And the [destination] argument specifies the location you want to copy the file to.\n</code></pre> </li> <li> <p><code>mv</code> versatile tool used for moving or renaming files/directories; example:</p> </li> </ul>"},{"location":"linux/file-management.html#renaming-files-with-mv","title":"Renaming Files with \u2018mv\u2019","text":"<pre><code>$ mv helloworld.txt hellolinux.txt\n\n# Output:\n# The file previously named 'helloworld.txt' is now named 'hellolinux.txt'\n</code></pre>"},{"location":"linux/file-management.html#moving-files-with-mv","title":"Moving Files with \u2018mv\u2019","text":"<p><pre><code>mv /home/user/Documents/old_folder/file.txt /home/user/Documents/new_folder/\n\n# Output:\n# 'file.txt' is moved from 'old_folder' to 'new_folder'\n</code></pre> - <code>cp -r</code> i <code>rm -r</code> ozna\u010dava rekurzivno kopiranje i brisanje, bri\u0161e direktorij i sve datoteke i poddirektorije u njemu</p> <ul> <li>kod naredbe <code>mv</code>, za razliku od <code>cp</code> i <code>rm</code>, nema potrebe za rekurzijom; radi se o preimenovanju</li> </ul>"},{"location":"linux/file-management.html#glob-uzorci","title":"Glob uzorci","text":"<ul> <li>mnogo radimo sa nazivima datoteka pa postoji mogu\u0107nost rada sa posebnim znakovima (koji nemaju doslovno zna\u010denje) da bismo brzo i lako specificirali nazive ve\u0107eg broja datoteka</li> <li> <p>glob uzorci, globovi ili wildcards</p> <ul> <li>koriste se za pretra\u017eivanje uzoraka koji odgovaraju zadanome</li> <li>na\u010din da vi\u0161e datoteka koje imaju sli\u010dna imena pove\u017eemo jednom naredbom</li> <li>glob != regex, samo ima donekle sli\u010dnu sintaksu i namjenu</li> </ul> </li> <li> <p><code>?</code> -- jedan znak, bilo koji</p> </li> <li><code>*</code> -- bilo koliko bilo kojih znakova</li> <li><code>[chars]</code> -- jedan znak, bilo koji od navedenih u zagradama, mo\u017ee i raspon oblika <code>[A-Z]</code>, <code>[a-z]</code> ili <code>[0-9]</code></li> <li> <p><code>[:klasa:]</code> -- zamjenjuje samo jedan, bilo koji znak koji je \u010dlan navedene klase</p> <ul> <li>naj\u010de\u0161\u0107e kori\u0161tene klase su: <code>[:alnum:]</code>, <code>[:alpha:]</code>, <code>[:digit:]</code>, <code>[:lower:]</code>, <code>[:upper:]</code></li> </ul> </li> <li> <p><code>\\</code> -- tzv. prekidni znak</p> </li> </ul> <p>Zadatak</p> <ul> <li>U svom ku\u0107nom direktoriju stvorite poddirektorij <code>Zadatci</code> i u njemu datoteke <code>zadatak</code>, <code>zadatek</code>, <code>zadatuk</code>, <code>zadatak1</code>, <code>zadatak2</code>, <code>zadatakABC</code>, <code>zadatakabc</code>, <code>zadacnica</code>, <code>zadacnicA</code>, <code>zad3</code> i <code>dat05</code>.</li> <li> <p>Jednom naredbom, koriste\u0107i se glob-om, izlistajte samo:</p> <ul> <li><code>zadatak</code>, <code>zadatek</code> i <code>zadatuk</code></li> <li><code>zadatek</code> i <code>zadatuk</code></li> <li>samo datoteke koje na 8 mjestu naziva imaju veliko slovo</li> <li>samo datoteke koje po\u010dinju slovom <code>z</code>, na 5 mjestu naziva im nije ni malo ni veliko slovo koja se po abecedi nalazi nakon slova <code>s</code>, i \u010diji naziv zavr\u0161ava malim slovom</li> <li>sve datoteke \u010diji naziv zavr\u0161ava brojem manjim od 4</li> <li>sve navedene datoteke</li> </ul> </li> <li> <p>Isprobajte naredbu <code>ls [^ad]*</code> i razmislite o njezinom zna\u010denju.</p> </li> <li>Isprobajte naredbu <code>ls {ab,dat,f}??</code> i razmislite o njezinom zna\u010denju.</li> <li>Isprobajte naredbu <code>cat *[[:upper:]1-4]</code>. \u0160to ona radi?</li> </ul>"},{"location":"linux/file-management.html#pretrazivanje-datotecnog-sustava","title":"Pretra\u017eivanje datote\u010dnog sustava","text":"<ul> <li> <p><code>find</code> u specificiranim direktorijima tra\u017ei datoteke ili skupine datoteka</p> <ul> <li>sintaksa: <code>find &lt;direktoriji&gt; &lt;uvjeti&gt;</code> (direktorij koji se pretra\u017euje mora biti naveden prije uvjeta)</li> <li>direktorij mo\u017ee biti dan kori\u0161tenjem apsolutnog ili relativnog referenciranja</li> <li>mo\u017ee koristiti regularne izraze parametar <code>-regex</code></li> <li> <p>pregled \u010desto kori\u0161tenih parametara:</p> Parametar Ograni\u010denje pretra\u017eivanja <code>-user &lt;ime korisnika&gt;</code> Samo datoteke odre\u0111enog korisnika <code>-size &lt;veli\u010dina&gt;</code> Samo datoteke specifi\u010dne veli\u010dine <code>-type f</code> Samo datoteke (ne direktoriji) <code>-type d</code> Samo direktoriji <code>-name &lt;ime datoteke&gt;</code> Samo datoteke odre\u0111enog imena <code>-atime &lt;broj dana&gt;</code> Samo datoteke \u010dije je vrijeme posljednjeg pristupa manje od navedenog u danima <code>-amin &lt;broj minuta&gt;</code> Isto kao iznad samo se navode minute umjesto dana <code>-ctime &lt;broj dana&gt;</code> Samo datoteke \u010dije je vrijeme izrade manje od navedenog u danima <code>-cmin &lt;broj minuta&gt;</code> Isto kao iznad samo se navode minute umjesto dana <code>-mtime &lt;broj dana&gt;</code> Samo datoteke \u010dije je vrijeme posljednje promjene manje od navedenog u danima <code>-mmin &lt;broj minuta&gt;</code> Isto kao iznad samo se navode minute umjesto dana <code>-newer &lt;datoteka&gt;</code> Samo datoteke stvorene prije odre\u0111ene datoteke </li> <li> <p>naredba je spora jer mora provjeriti svaki file koji se nalazi na zadanoj putanji</p> </li> <li> <p>\u010deste primjene:</p> <ul> <li>brisanje na\u0111enih datoteka naredbom find: <code>find ... -exec rm {} \\;</code> ili <code>find ... | xargs rm</code></li> <li>pretra\u017eivanje na\u0111enih datoteka: <code>find ... -type f | xargs grep &lt;izraz&gt;</code></li> </ul> </li> </ul> </li> <li> <p><code>locate</code> pretra\u017euje bazu datoteka za datoteku koja u imenu sadr\u017ei dani niz znakova</p> <ul> <li>sintaksa: <code>locate &lt;ime datoteke&gt;</code></li> <li>rezultat pretra\u017eivanja je puna putanja do tra\u017eene datoteke</li> <li>pretra\u017euje br\u017ee jer stvara bazu imena datoteka koje postoje u datote\u0107nom sustavu te nema potrebe pretra\u017eivati svaku datoteku koja postoji na datote\u010dnom sustavu; baza se osvje\u017eava naredbom <code>updatedb</code>, na ve\u0107ini modernih distribucija se pokre\u0107e automatski na dnevnoj bazi</li> </ul> </li> <li> <p><code>which</code> se koristi kada \u017eelimo saznati punu putanju do odre\u0111ene izvr\u0161ne datoteke datoteke koja se nalazi u nekom od direktorija navedenom u varijabli okoline <code>PATH</code></p> </li> <li> <p><code>whereis</code> pretra\u017euje lokaciju izvornog koda, binarnih datoteka i stranica priru\u010dnika</p> <ul> <li> <p>pregled \u010desto kori\u0161tenih parametara:</p> Parametar Uloga <code>-b</code> tra\u017eenje binarnih datoteka <code>-m</code> tra\u017eenje stranica priru\u010dnika <code>-s</code> tra\u017eenje izvr\u0161nog koda </li> </ul> </li> </ul>"},{"location":"linux/permissions.html","title":"Permissions","text":"<p>Every file and directory in your UNIX/Linux system has the following 3 permissions defined for all the 3 owners discussed above.</p> <ul> <li><code>r</code> = read permission</li> <li><code>w</code> = write permission</li> <li><code>x</code> = execute permission</li> <li><code>\u2013</code> = no permission</li> </ul> <p><code>Read</code> - This permission gives you the authority to open and read a file. Read permission on a directory gives you the ability to list its content.</p> <p><code>Write</code> - The write permission gives you the authority to modify the contents of a file. The write permission on a directory gives you the authority to add, remove and rename files stored in the directory. Consider a scenario where you have to write permission on file but do not have write permission on the directory where the file is stored. You will be able to modify the file contents. But you will not be able to rename, move or remove the file from the directory.</p> <p><code>Execute</code> - In Windows, an executable program usually has an extension \u201c.exe\u201d and which you can easily run. In Unix/Linux, you cannot run a program unless the execute permission is set. If the execute permission is not set, you might still be able to see/modify the program code(provided read &amp; write permissions are set), but not run it.</p> <p>R = 4 W = 2 X = 1</p> <ul> <li>rwx--x--x  1 root root   181 Aug  5  2023  cats.jpg</li> <li>---------  - ---- ----   --- ------------  -------- |    |       |   |   |      |        |           | |    |       |   |   |      |        |           +----- file name |    |       |   |   |      |        +----- modification time |    |       |   |   |      +----- file size in bytes |    |       |   |   +----- group owner |    |       |   +----- user owner |    |       +----- hard link count |    +----- permissions +---- file type</li> </ul>"},{"location":"linux/permissions.html#absolutenumeric-mode-in-linux","title":"Absolute(Numeric) Mode in Linux","text":"<p>In this mode, file permissions are not represented as characters but a three-digit octal number.</p> Number Permission Type Symbol 0 No Permission \u2014 1 Execute \u2013x 2 Write -w- 3 Execute + Write -wx 4 Read r\u2013 5 Read + Execute r-x 6 Read +Write rw- 7 Read + Write +Execute rwx <p>For example, finding files/directories and changing mode to default values:</p> <p><code>find . -type f -exec chmod 644 {}  \\;</code> <code>find . -type d -exec chmod 755 {} \\;</code></p>"},{"location":"linux/piping.html","title":"Piping","text":"<p>Info</p> <p>Needs to be added</p>"},{"location":"networking/IP-address.html","title":"IP address","text":""},{"location":"networking/IP-address.html#ip-address","title":"IP address","text":"<p>An IP address is a unique numerical value assigned to a device or domain that connects to the Internet. Each IP address is a series of characters, such as '192.168.1.1'. Via DNS resolvers, which translate human-readable domain names into IP addresses, users are able to access websites without memorizing this complex series of characters.</p> <p>Two main functions:</p> <ul> <li>Host or network interface identification </li> <li>Location addressing</li> </ul> <p>IPv4 / IPv6 - IPv4 is a 32-bit IP protocol address construction, IPv6 is 128-bit one</p>"},{"location":"networking/IP-address.html#network-prefixes","title":"Network prefixes","text":"<p>IP addresses can be taken from the IPv4 or the IPv6 pool and are divided into two parts, a network section and a host section. The network section identifies the particular network and the host section identifies the particular node (for example, a certain computer) on the Local Area Network (LAN).</p>"},{"location":"networking/IP-address.html#ip-address-types","title":"IP address types","text":"<p>There are four different types of IP addresses: public, private, static, and dynamic. While the public and private are indicative of the location of the network\u2014private being used inside  a network while the public is used outside of a network\u2014static and dynamic indicate permanency.</p> <ul> <li> <p>Public: public IP address is an address where one primary address is associated with your whole network. In this type of IP address, each of the connected devices has the same IP address</p> </li> <li> <p>Private: private IP address is a unique IP number assigned to every device that connects to your home internet network, which includes devices like computers, tablets, smartphones, which is used in your household</p> </li> <li> <p>Static: static IP address is an IP address that cannot be changed. In contrast, a dynamic IP address will be assigned by a Dynamic Host Configuration Protocol (DHCP) server, which is subject to change. Static IP address never changes, but it can be altered as part of routine network administration.</p> </li> <li>Dynamic: dynamic IP addresses always keep changing. It is temporary and is allocated to a device every time it connects to the web.</li> </ul>"},{"location":"networking/IP-address.html#ip-classes-classful-network","title":"IP Classes - Classful network","text":"<p>A classful network is an obsolete network addressing architecture used in the Internet from 1981 until the introduction of Classless Inter-Domain Routing in 1993. </p> <p>The method divides the IP address space for Internet Protocol version 4 into five address classes based on the leading four address bits. IP addresses from the first three classes (A, B and C) can be used for host addresses.</p> <ul> <li>Class A: 10.0. 0.0 \u2014 10.255. 255.255.</li> <li>Class B: 172.16. 0.0 \u2014 172.31. 255.255.</li> <li>Class C: 192.168. 0.0 \u2014 192.168. 255.255.</li> </ul>"},{"location":"networking/IP-address.html#cidr","title":"CIDR","text":"<p>Classless Inter-domain Routing (CIDR) was introduced in order to improve both address space utilization and routing scalability in the Internet. It was needed because of the rapid growth of the Internet and growth of the IP routing tables held in the Internet routers.</p> <p>CIDR moves away from the traditional IP classes (Class A, Class B, Class C, and so on). In CIDR , an IP network is represented by a prefix, which is an IP address and some indication of the length of the mask. Length means the number of left-most contiguous mask bits that are set to one.</p> <p>So, network 172.16.0.0 255.255.0.0 can be represented as 172.16.0.0/16. CIDR also depicts a more hierarchical Internet architecture, where each domain takes its IP addresses from a higher level.</p> <p>This allows for the summarization of the domains to be done at the higher level. For example, if an ISP owns a network 172.16.0.0/16, then the ISP can offer 172.16.1.0/24, 172.16.2.0/24, and so on to customers.</p> <p>Yet, when advertising to other providers, the ISP only needs to advertise 172.16.0.0/16. CIDR RANGE VISUALIZER - https://cidr.xyz</p>"}]}